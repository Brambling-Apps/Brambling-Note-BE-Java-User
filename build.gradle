plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'moe.echo.bramblingnote'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.2")
	mapstructVersion = "1.5.5.Final"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'de.mkammerer:argon2-jvm:2.11'
	// https://mvnrepository.com/artifact/jakarta.mail/jakarta.mail-api
	implementation 'jakarta.mail:jakarta.mail-api:2.1.1'
	// https://mvnrepository.com/artifact/org.eclipse.angus/jakarta.mail
	implementation 'org.eclipse.angus:jakarta.mail:2.0.1'
//	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
//	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	// https://github.com/java-json-tools/json-patch#using-it-in-your-project
	implementation 'com.github.java-json-tools:json-patch:1.13'
	compileOnly 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
